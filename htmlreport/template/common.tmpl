{{ define "cross" }}
    <td style="text-align:center;">
        <svg style="color: red" xmlns="http://www.w3.org/2000/svg"
            width="16" height="16" fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" fill="red"></path>
            <path
                d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"
                fill="red"></path>
        </svg>
        <span style="color: red; font-size:12px; ">{{ . }}</span>
    </td>
{{ end }}

{{ define "critical" }}
    <td style="text-align:center;">
        <svg style="color: #dc3545" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-octagon" viewBox="0 0 16 16">
            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" fill="#dc3545"></path>
            <path d="M7.002 11a.905.905 0 1 0 1.996 0 .905.905 0 0 0-1.996 0zm.93-6.48a.535.535 0 0 0-1.07 0l.146 4.768a.535.535 0 0 0 1.07 0l.146-4.768z" fill="#dc3545"></path>
        </svg>
        <span style="color: #dc3545; font-size:12px;">{{ . }}</span>
    </td>
{{ end }}

{{ define "tick" }}
    <td style="text-align:center;">
        <svg style="color: rgb(32, 217, 8);" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
            class="bi bi-check-circle" viewBox="0 0 16 16">
            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" fill="#20d908"></path>
            <path
                d="M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z"
                fill="#20d908"></path>
        </svg>
        <span style="color: green; font-size:12px;">{{ . }}</span>
    </td>
{{ end }}

{{ define "warning" }}
    <td style="text-align:center;">
        <svg style="color: #c3a706;" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
            class="bi bi-exclamation-circle" viewBox="0 0 16 16">
            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" fill="#c3a706"></path>
            <path d="M7.002 11a.905.905 0 1 0 1.996 0 .905.905 0 0 0-1.996 0zm.93-6.48a.535.535 0 0 0-1.07 0l.146 4.768a.535.535 0 0 0 1.07 0l.146-4.768z"
                fill="#c3a706"></path>
        </svg>
        <span style="color: #c3a706; font-size:12px;">{{ . }}</span>
    </td>
{{ end }}

{{ define "manualCheckIcon" }}
    <td style="text-align:center;">
        <svg style="color: #FFD700" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
            class="bi bi-eye" viewBox="0 0 16 16">
            <path d="M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM8 4.5c1.932 0 3.5 1.568 3.5 3.5S9.932 11.5 8 11.5 4.5 9.932 4.5 8 6.068 4.5 8 4.5z" fill="#FFD700"></path>
            <path d="M8 5.5a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5z" fill="#FFD700"></path>
        </svg>
    </td>
{{ end }}


{{ define "infoIcon" }}
    <td style="text-align:center;">
        <svg class="infoIcon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="16" height="16">
            <path d="M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm169.8-90.7c7.9-22.3 29.1-37.3 52.8-37.3h58.3c34.9 0 63.1 28.3 63.1 63.1c0 22.6-12.1 43.5-31.7 54.8L280 264.4c-.2 13-10.9 23.6-24 23.6c-13.3 0-24-10.7-24-24V250.5c0-8.6 4.6-16.5 12.1-20.8l44.3-25.4c4.7-2.7 7.6-7.7 7.6-13.1c0-8.4-6.8-15.1-15.1-15.1H222.6c-3.4 0-6.4 2.1-7.5 5.3l-.4 1.2c-4.4 12.5-18.2 19-30.6 14.6s-19-18.2-14.6-30.6l.4-1.2zM224 352a32 32 0 1 1 64 0 32 32 0 1 1 -64 0z"/>
        </svg>
    </td>
{{ end }}

{{ define "dataTables" }}
    {{ range .Tables }}
    <div class="queryResult maintable">
        <p><strong><underline>{{ .Title }}</underline></strong></p>
        <table class="table table-striped table-sm">
            <thead>
                <tr>
                    {{ range .ColAlias }}
                        <th>{{ . }}</th>
                    {{ end }}
                </tr>
            </thead>
            {{ range .Rows }}
                <tr>
                    {{ range . }}
                        <td>{{ . }}</td>
                    {{ end }}
                </tr>
            {{ end }}
        </table>
    </div>
    {{ end }}
{{ end }}


{{ define "html" }}
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes" />
            <title>KloudDBShield Report</title>
            {{ template "styles" }}
            <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.0/dist/chart.min.js"></script>
            <script>
                function getProgressColor(value) {
                    if (value > 70) {
                        return {
                            backgroundColor: 'rgba(255, 99, 132, 0.2)', // red
                            borderColor: 'rgba(255, 99, 132, 1)'
                        };
                    } else if (value > 50 && value < 70) {
                        return {
                            backgroundColor: 'rgba(255, 206, 86, 0.2)', // yellow
                            borderColor: 'rgba(255, 206, 86, 1)'
                        };
                    } else if (value <= 25) {
                        return {
                            backgroundColor: 'rgba(75, 192, 192, 0.2)', // green
                            borderColor: 'rgba(75, 192, 192, 1)'
                        };
                    } else if (value > 25 && value <= 50) {
                        return {
                            backgroundColor: 'rgba(54, 162, 235, 0.2)', // blue
                            borderColor: 'rgba(54, 162, 235, 1)'
                        };
                    }
                }

                function getchartconfig(value) {
                    var colors = getProgressColor(value);
                    return {
                        type: 'bar',
                        data: {
                            labels: ['Progress'],
                            datasets: [{
                                label: 'Percentage towards emergency auto vaccum.',
                                data: [value],
                                backgroundColor: colors.backgroundColor,
                                borderColor: colors.borderColor,
                                borderWidth: 1
                            }]
                        },
                        options: {
                            indexAxis: 'y',
                            scales: {
                                x: {
                                    beginAtZero: true,
                                    max: 100
                                }
                            },
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            responsive: true,
                            maintainAspectRatio: false
                        }
                    };
                }

                function renderChart(clusterStats, id) {

                    // progress bar for PercentTowardsEmergencyAutovac
                    if (clusterStats.PercentTowardsEmergencyAutovac) {
                        var ctx = document.getElementById(id).getContext('2d');
                        var progressValue = clusterStats.PercentTowardsEmergencyAutovac// Set the progress value here
                        var progressChart = new Chart(ctx, getchartconfig(progressValue));
                    }

                    // progress bar for PercentTowardsWraparound
                    if (clusterStats.PercentTowardsWraparound) {

                        var ctx1 = document.getElementById(id + '2').getContext('2d');
                        var progressValue = clusterStats.PercentTowardsWraparound// Set the progress value here
                        var progressChart = new Chart(ctx1, getchartconfig(progressValue));
                    }
                }
            </script>
        </head>

        <body>
            <header>
                <div class="container">
                    <h1 class="header-title">
                        <img src="data:image/png;base64, " alt="KloudDBShield">
                    </h1>
                </div>
            </header>
            <div class="container">
                <div class="subcontainer">
                    <ul class="nav nav-tabs">
                        {{ range $index, $tab := . }}
                            <li class="nav-item"><a class="nav-link{{ if eq $index 0 }} active{{ end }}" href="#{{ replace $tab.Title " " "" }}_{{ $index }}">{{ $tab.Title }}</a></li>
                        {{ end }}
                    </ul>
                    <div class="tab-content active-tab">
                        {{ range $index, $tab := . }}
                            <div id="{{ replace .Title " " "" }}_{{ $index }}" class="tab-pane {{ if eq $index 0 }}active{{ end }}">
                                {{ template "tabMapping" $tab }}
                            </div>
                        {{ end }}
                    </div>
                </div>
            </div>
           	<footer>
                <div>Report generated by KloudDB Shield (Klouddb.io)</div>
           	</footer>

            <!-- Latest compiled and minified JavaScript -->
            {{ template "scripts" }}
        </body>
    </html>
{{ end }}

{{ define "tos" }}
    <p><a href="#{{ .Id }}" title="{{ .Description }}">{{ .Description }}</a></p>
{{ end }}
